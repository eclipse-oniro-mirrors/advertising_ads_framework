# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/config/components/ets_frontend/es2abc_config.gni")
import("//build/ohos.gni")
import("//build/ohos/ace/ace.gni")
import("//domains/advertising/advertising/advertising.gni")

es2abc_gen_abc("gen_advertising_abc") {
  src_js = rebase_path("src/advertising.js")
  dst_file = rebase_path(target_out_dir + "/advertising.abc")
  in_puts = [ "src/advertising.js" ]
  out_puts = [ target_out_dir + "/advertising.abc" ]
  extra_args = [ "--module" ]
}

gen_js_obj("advertising_js") {
  input = "src/advertising.js"
  output = target_out_dir + "/advertising.o"
}

gen_js_obj("advertising_abc") {
  input = get_label_info(":gen_advertising_abc", "target_out_dir") +
          "/advertising.abc"
  output = target_out_dir + "/advertising_abc.o"
  dep = ":gen_advertising_abc"
}

cflags = []

config("native_module_config") {
  visibility = [ ":*" ]

  include_dirs = [ "${advertising_common_path}/ipc/include" ]

  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }

  defines = []
}

ohos_shared_library("advertising") {
  branch_protector_ret = "pac_ret"

  include_dirs = [
    "//domains/advertising/advertising/common/error_code",
    "//domains/advertising/advertising/common/log/include",
    "//domains/advertising/advertising/common/utils/include",
    "//domains/advertising/advertising/common/ipc/include",
    "//domains/advertising/advertising/common/model/include",
    "./include",
  ]

  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
    boundary_sanitize = true
    integer_overflow = true
    ubsan = true
  }

  configs = [ ":native_module_config" ]

  sources = [
    "src/ad_init.cpp",
    "src/ad_load_napi_common.cpp",
    "src/ad_load_service.cpp",
    "src/ad_napi_common_error.cpp",
    "src/advertising.cpp",
  ]

  deps = [
    ":advertising_abc",
    ":advertising_js",
    "${advertising_common_path}:advertising_common",
  ]

  external_deps = [
    "ability_runtime:ability_connect_callback_stub",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:abilitykit_native",
    "ability_runtime:napi_base_context",
    "ability_runtime:napi_common",
    "ace_engine:ace_uicontent",
    "bundle_framework:appexecfwk_core",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "hilog:libhilog",
    "ipc:ipc_core",
    "libuv:uv_static",
    "napi:ace_napi",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]

  relative_install_dir = "module"
  subsystem_name = "advertising"
  part_name = "advertising"
}


ohos_prebuilt_etc("ad_service_config_json") {
  source = "resource/ad_service_config.json"
  relative_install_dir = "advertising/ads_framework"
  part_name = "advertising"
  subsystem_name = "advertising"
}


